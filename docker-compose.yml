version: "3.6"

services:
  web:
    image: "georgjung/nginx-brotli:1.25-alpine"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ~/cert/cert-crt.pem:/etc/nginx/ssl/cert.crt:ro
      - ~/cert/cert-key.pem:/etc/nginx/ssl/cert.key:ro
    restart: always
    ports:
      - "1180:80"
      - "11443:443"
    networks:
      apps:
    links:
      - db
      - server
      - kibana
      - grafana
      - influxdb
    depends_on:
      - db
      - server
      - kibana
      - grafana
      - influxdb

  front:
    image: "ghcr.io/insomnia-it/front:${GITHUB_SHA}"
    restart: always
    networks:
      apps:

  server:
    image: "ghcr.io/insomnia-it/server:${GITHUB_SHA}"
    environment:
      PORT: "80"
      DATABASE: "mongodb://db:27017"
      MONGODB_USER: "admin"
      MONGODB_PASSWORD: "${DB_PASSWORD}"
    restart: always
    links:
      - db
      - logstash
    volumes:
      - "./secrets:/web/secrets"
    depends_on:
      - db
      - logstash
    networks:
      apps:

  db:
    image: mongo:7.0.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - "./data:/data/db"
    restart: always
    networks:
      apps:
      telegraf:

  dbui:
    image: mongo-express:1.0.0-18-alpine3.18
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "admin"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${DB_PASSWORD}"
      ME_CONFIG_BASICAUTH_USERNAME: "admin"
      ME_CONFIG_BASICAUTH_PASSWORD: "${DB_PASSWORD}"
      ME_CONFIG_MONGODB_SERVER: "db"
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_SITE_BASEURL: "/db/"
    networks:
      - apps
    depends_on:
      - db
    restart: always

  elasticsearch:
    image: elasticsearch:7.16.1
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data:rw
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - elastic

  logstash:
    image: logstash:7.16.1
    environment:
      discovery.seed_hosts: logstash
      LS_JAVA_OPTS: "-Xms512m -Xmx512m"
      ELASTIC_PASSWORD: ELASTIC_PASSWORD
    restart: always
    volumes:
      - ./logstash.config:/usr/share/logstash/pipeline/logstash-nginx.config:ro
    depends_on:
      - elasticsearch
    networks:
      - elastic
      - apps
    command: logstash -f /usr/share/logstash/pipeline/logstash-nginx.config

  kibana:
    image: kibana:7.16.1
    restart: always
    environment:
      - "SERVER_BASEPATH=/kibana"
      - "SERVER_HOST=0.0.0.0"
      - "ELASTICSEARCH_USERNAME=admin"
      - "ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}"
    depends_on:
      - elasticsearch
    networks:
      - elastic
      - apps

  telegraf:
    image: telegraf:1.26.3-alpine
    restart: always
    environment:
      DB_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
      - db
    links:
      - influxdb
      - db
    networks:
      telegraf:

  influxdb:
    image: influxdb:1.8.10-alpine
    restart: always
    environment:
      - INFLUXDB_DB=influx
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      telegraf:
      apps:

  grafana:
    image: grafana/grafana:9.5.3
    restart: always
    depends_on:
      - influxdb
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: "${GRAFANA_PASSWORD}"
      GF_INSTALL_PLUGINS: ""
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
    links:
      - influxdb
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      telegraf:
      apps:

#  tank:
#    image: yandex/yandex-tank
#    volumes:
#      - "./:/var/loadtest/"
#    depends_on:
#      - web
#      - server
#    links:
#      - web
#      - server
#    networks:
#      apps:

volumes:
  elastic_data:
  grafana_data: {}
  influxdb_data: {}

networks:
  telegraf:
    driver: bridge
  elastic:
    driver: bridge
  apps:
    driver: bridge
